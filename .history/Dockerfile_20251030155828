# Etapa de construcción
FROM node:22-alpine AS builder
WORKDIR /app

# Instalar dependencias primero (mejor caché)
COPY package*.json ./
# Usar caché de npm y optimizar instalación
RUN npm config set cache /tmp/npm-cache && \
    npm ci --prefer-offline --no-audit && \
    npm cache clean --force

# Copiar el resto de archivos
COPY . .

# Limpiar cualquier build anterior y construir la aplicación
RUN rm -rf .next && \
    npm run build

# Etapa de producción
FROM node:22-alpine
WORKDIR /app

# Instalar dependencias necesarias en una sola capa
RUN apk add --no-cache libc6-compat

# Copiar solo lo necesario para standalone
COPY --from=builder /app/.next/standalone ./
COPY --from=builder /app/.next/static ./.next/static
COPY --from=builder /app/public ./public

# Verificar la estructura de archivos
RUN echo "=== Estructura de archivos en /app ===" && \
    ls -la && \
    echo "=== Contenido de .next ===" && \
    ls -la .next/

# Asegurar permisos correctos
RUN chown -R node:node /app && \
    chmod -R 755 /app

# Cambiar a usuario no root
USER node

# Puerto fijo para el frontend
EXPOSE 3000

# Variables de entorno
ENV PORT=3000
ENV NODE_ENV=production
ENV NODE_OPTIONS="--max-old-space-size=1536"

# Comando para iniciar la aplicación con verificación